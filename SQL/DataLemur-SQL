--DAY 1
/* Histogram of Tweets [Twitter SQL Interview Question */ link:https://datalemur.com/questions/sql-histogram-tweets
Q. Assume you're given a table Twitter tweet data, write a query to obtain a histogram of tweets posted per user in 2022. Output the tweet count per user as the bucket and the number of Twitter users who fall into that bucket. In other words, group the users by the number of tweets they posted in 2022 and count the number of users in each group.

WITH cte as
(
SELECT user_id, COUNT(tweet_id) as tweet_per_user
FROM tweets
WHERE EXTRACT(year from tweet_date) = 2022
GROUP BY 1 )
SELECT 
tweet_per_user as tweet_bucket,
COUNT(user_id) as users_num
from cte 
GROUP BY 1

/*[LinkedIn SQL Interview Question] */
Q. Write a query to find the candidates best suited for an open Data Science job. You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.

SELECT candidate_id
FROM candidates
WHERE skill in ('Python','Tableau','PostgreSQL') 
GROUP BY 1
HAVING count(skill) = 3

/* Page With No Likes [Facebook SQL Interview Question]*/
Q. Write a query to return the IDs of the Facebook pages that have zero likes. The output should be sorted in ascending order based on the page IDs.

SELECT distinct p.page_id
from pages p
left join page_likes l
on p.page_id = l.page_id
where user_id is  null
order by 1

/*[Tesla SQL Interview Question] */
Q. Write a query to determine which parts have begun the assembly process but are not yet finished.
SELECT part, assembly_step
FROM parts_assembly
where finish_date is null

/*Laptop vs. Mobile Viewership [New York Times SQL Interview Question] */
Q. Write a query that calculates the total viewership for laptops and mobile devices where mobile is defined as the sum of tablet and phone viewership. Output the total viewership for laptops as laptop_reviews and the total viewership for mobile devices as mobile_views.

with cte1 as(
  select 
  count(*) as laptop_reviews
  from viewership  
  where device_type = 'laptop'
),
cte2 as 
(
  select 
  count(*) as mobile_views
  from viewership  
  where device_type != 'laptop'
)
select laptop_reviews, mobile_views from cte1,cte2

/* Average Post Hiatus (Part 1) [Facebook SQL Interview Question]*/
Q. write a query to find the number of days between each userâ€™s first post of the year and last post of the year in the year 2021. Output the user and number of the days between each user's first and last post.

SELECT 
  user_id,
  EXTRACT(day FROM (max(post_date) - MIN(post_date))) AS days_between
FROM posts
WHERE EXTRACT(year FROM post_date) = '2021'
GROUP BY user_id
HAVING count(post_id) > 1;

/*Teams Power Users [Microsoft SQL Interview Question]*/
Q. Write a query to identify the top 2 Power Users who sent the highest number of messages on Microsoft Teams in August 2022. Display the IDs of these 2 users along with the total number of messages they sent. Output the results in descending order based on the count of the messages.
SELECT 
  sender_id, count(message_id) as message_count
from messages
where EXTRACT(year from sent_date) = 2022
and EXTRACT(month from sent_date) = 8
GROUP BY 1
HAVING count(message_id) >2
order by 2 desc

/*Duplicate Job Listings [Linkedin SQL Interview Question]*/
Q. Write a query to retrieve the count of companies that have posted duplicate job listings.
with cte as 
(SELECT 
  company_id, count(job_id)
FROM 
job_listings
GROUP BY 1
HAVING count(job_id) >=2)
select count(*) as duplicate_companies from cte

/*Cities With Completed Trades [Robinhood SQL Interview Question]*/
Q. Write a query to retrieve the top three cities that have the highest number of completed trade orders listed in descending order. Output the city name and the corresponding number of completed trade orders.

SELECT 
  u.city, COUNT(T.order_id) AS total_orders
FROM trades t
JOIN users u ON t.user_id = u.user_id
where t.status = 'Completed'
group by 1
order by total_orders desc
limit 3
--DAY2
/*Average Review Ratings [Amazon SQL Interview Question]*/
Q. The output should display the month as a numerical value, product ID, and average star rating rounded to two decimal places. Sort the output first by month and then by product ID.

SELECT 
 extract(month from submit_date) as mth, 
 product_id as product ,
 round(AVG(stars),2) as avg_stars
FROM reviews
GROUP BY 1,2
order by 1,2;

/*Final Account Balance [Paypal SQL Interview Question]*/
Q. Final Account Balance- Paypal
with cte as 
(SELECT 
  account_id, 
  case
    when transaction_type = 'Deposit'  then amount
    when transaction_type = 'Withdrawal'  then -amount
    end as balance
FROM TRANSACTIONS
group by 1,2
order by 1)
select account_id, sum(balance) as final_balance from cte group by 1

/*QuickBooks vs TurboTax [Intuit SQL Interview Question]*/
Q. Write a query to determine the total number of tax filings made using TurboTax and QuickBooks. Each user can file taxes once a year using only one product.
/*
with cte1 as (
select 
  count(*) as TurboTax_total
from filed_taxes
where product ilike '%TurboTax%'
),cte2 as 
(
select 
  count(*) as Quickbooks_total
from filed_taxes
where product ilike  '%Quickbooks%'
)
select * from cte1,cte2

*/
--using case when

SELECT 
  SUM(case 
    WHEN product ilike '%TurboTax%' then 1 else 0 END) as TurboTax_total,
  SUM( CASE 
    WHEN product ilike '%Quickbooks%' then 1 else 0 END) as Quickbooks_total
from filed_taxes

/*App Click-through Rate (CTR) [Facebook SQL Interview Question]*/
Q. Write a query to calculate the click-through rate (CTR) for the app in 2022 and round the results to 2 decimal places. 
NOTE:Percentage of click-through rate (CTR) = 100.0 * Number of clicks / Number of impressions
     To avoid integer division, multiply the CTR by 100.0, not 100.

with cte as 
(
SELECT app_id,
  sum(case 
          when event_type = 'impression' then 1 else 0 end ) as total_impression,
  sum(case 
            when event_type = 'click' then 1 else 0 end) as total_click         
from events
where extract( year from timestamp) = 2022
group by 1
)
SELECT app_id,
      round((100.0 * total_click)/total_impression,2) as ctr
from cte

/*Second Day Confirmation [TikTok SQL Interview Question]*/
Q. Write a query to display the user IDs of those who did not confirm their sign-up on the first day, but confirmed on the second day.

with cte as
(SELECT 
    e.email_id,e.user_id, t.signup_action, e.signup_date, t.action_date,
    extract(day from action_date-signup_date) as date_diff
FROM emails e
join texts t on e.email_id = t.email_id 
ORDER BY 2)
select user_id
from cte
where signup_action = 'Confirmed' and date_diff = 1

/*Cards Issued Difference [JPMorgan Chase SQL Interview Question]*/
Q. Cards Issued Difference [JPMorgan Chase SQL Interview Question]

SELECT 
  card_name, 
  MAX(issued_amount) - MIN(issued_amount) AS difference
FROM monthly_cards_issued
GROUP BY card_name
ORDER BY difference DESC;

/*Compressed Mean [Alibaba SQL Interview Question]*/
Q.  find the mean number of items per order on Alibaba, rounded to 1 decimal place using tables which includes information on the count of items in each order (item_count table) and the corresponding number of orders for each item count (order_occurrences table).

SELECT 
  ROUND(
    cast(SUM(item_count*order_occurrences) as decimal)
    /SUM(order_occurrences)
  ,1) AS mean
FROM items_per_order

/*
SELECT 
  SUM(item_count::DECIMAL*order_occurrences)
    /SUM(order_occurrences) AS mean
FROM items_per_order;
*/

/*Pharmacy Analytics (Part 1) [CVS Health SQL Interview Question]*/
Q. Write a query to find the top 3 most profitable drugs sold, and how much profit they made. Assume that there are no ties in the profits. Display the result from the highest to the lowest total profit. 
NOTE: Total Profit = Total Sales - Cost of Goods Sold

SELECT  
   drug, (total_sales - cogs) as Total_Profit
FROM pharmacy_sales
order by 2 desc 
limit 3

/*Pharmacy Analytics (Part 2) [CVS Health SQL Interview Question]/*
Q. Write a query to identify the manufacturers associated with the drugs that resulted in losses for CVS Health and calculate the total amount of losses incurred.
Output the manufacturer's name, the number of drugs associated with losses, and the total losses in absolute value. Display the results sorted in descending order with the highest losses displayed at the top.

--abs function is used to find absolute value

SELECT
    manufacturer,  COUNT(drug) AS drug_count,
    abs(sum((total_sales-cogs))) AS total_loss
FROM pharmacy_sales
WHERE total_sales - cogs <= 0
GROUP BY 1
order by 3 desc

/*Pharmacy Analytics (Part 3) [CVS Health SQL Interview Question] */
Q. Write a query to calculate the total drug sales for each manufacturer. Round the answer to the nearest million and report your results in descending order of total sales. In case of any duplicates, sort them alphabetically by the manufacturer name.
with cte as 
(SELECT 
    manufacturer , 
    sum(total_sales) as sales
FROM pharmacy_sales 
GROUP BY manufacturer
ORDER BY sales  desc, 1
)
SELECT manufacturer, concat('$', round(sales/1000000), ' million') as sales_mil
from cte 

/*User's Third Transaction [Uber SQL Interview Question]*/
Q.Write a query to obtain the third transaction of every user. Output the user id, spend and transaction date.

with cte as 
(SELECT 
  *, lead(spend,2) over(PARTITION BY user_id order by transaction_date  ) as lead_spend
FROM transactions
order by user_id)

SELECT user_id, lead_spend as spend, transaction_date 
from cte 
where lead_spend is not null

/*Sending vs. Opening Snaps [Snapchat SQL Interview Question]*/
Q. Write a query to obtain a breakdown of the time spent sending vs. opening snaps as a percentage of total time spent on these activities grouped by age group. Round the percentage to 2 decimal places in the output.
/*time spent sending / (Time spent sending + Time spent opening)
Time spent opening / (Time spent sending + Time spent opening)  */

WITH CTE AS
(SELECT 
  age_bucket, sum(time_spent) as total_time,
  SUM(CASE WHEN activity_type = 'send' THEN time_spent ELSE 0 END) as send_time,
  SUM(CASE WHEN activity_type = 'open' THEN time_spent ELSE 0 END) as open_time
FROM activities a
JOIN age_breakdown b ON a.user_id = b.user_id
WHERE a.activity_type in ('send','open')
GROUP BY 1)
SELECT age_bucket, round(100.0 * send_time/total_time,2) as send_perc,
        round(100.0 * open_time/total_time,2) as open_perc
FROM CTE

/* Tweets' Rolling Averages [Twitter SQL Interview Question] */
Q. calculate the 3-day rolling average of tweets for each user. Output the user ID, tweet date, and rolling averages rounded to 2 decimal places.
WITH CTE AS
(SELECT 
    user_id, tweet_count, tweet_date,
    avg(tweet_count) 
    over(PARTITION BY user_id ORDER BY tweet_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as rolling_avg
FROM tweets
)
SELECT user_id, tweet_date, ROUND(rolling_avg,2) AS rolling_avg_3d FROM CTE

/*Highest-Grossing Items [Amazon SQL Interview Question]*/
Q.write a query to identify the top two highest-grossing products within each category in the year 2022. The output should include the category, product, and total spend.

WITH CTE AS
(SELECT 
  category, product,sum(spend) as total_spend,
  RANK() OVER(PARTITION BY category ORDER BY sum(spend) DESC) as rnk
FROM product_spend
where extract(year from transaction_date) = 2022
GROUP BY 1,2
)
SELECT category,product,total_spend
from cte
WHERE rnk <=2
ORDER BY 1,RNK

/* Top 5 Artists [Spotify SQL Interview Question]*/
Q.Write a query to find the top 5 artists whose songs appear most frequently in the Top 10 of the global_song_rank table. Display the top 5 artist names in ascending order, along with their song appearance ranking.
If two or more artists have the same number of song appearances, they should be assigned the same ranking, and the rank numbers should be continuous (i.e. 1, 2, 2, 3, 4, 5).

/* ranking has to be done on top 10 then top 5 selection is calculated */ 

with cte as(
SELECT a.artist_name,
  dense_rank() over(order by count(s.song_id) desc) as rnk
FROM artists a
JOIN songs s on a.artist_id = s.artist_id
JOIN global_song_rank r on s.song_id = r.song_id
where r.rank <= 10
GROUP BY 1
)
select artist_name, rnk as artist_rank
from cte
where rnk <=5

/* Signup Activation Rate [TikTok SQL Interview Question] */
Q. A senior analyst is interested to know the activation rate of specified users in the emails table. Write a query to find the activation rate. Round the percentage to 2 decimal places.

SELECT 
  ROUND(COUNT(texts.email_id)::DECIMAL
    /COUNT(DISTINCT emails.email_id),2) AS activation_rate
FROM emails
LEFT JOIN texts
  ON emails.email_id = texts.email_id
  AND texts.signup_action = 'Confirmed';

--Day 7
/*Fill Missing Client Data [Accenture SQL Interview Question]*/
Q. Can you write a SQL query that returns the product catalog with the missing data filled in?

WITH cte AS
(select *, 
  COUNT(CATEGORY) OVER(ORDER BY product_id) AS cat_order
from products)
SELECT  product_id,
      FIRST_VALUE(category) OVER(PARTITION BY cat_order) AS Category,
      name
FROM  CTE

/*Spotify Streaming History [Spotify SQL Interview Question] */

Q. You are given a songs_history table that keeps track of users" listening history on Spotify. The songs_weekly table tracks how
many times users listened to each song for all days between August 1 and August 7, 2022.

Write a query to show the user ID, song ID, and the number of times the user has played each song as of August 4, 2022. We'll refer to
the number of song piays as song_plays . The rows with the most song plays should be at the top of the output.
Assumption:

. The songs_history table holds data that ends on July 31, 2022. Output should include the historical data in this table.
. There may be a new user in the weekly table who is not present in the history table.
. A user may listen to a song for the first time, in which case no existing (user_id, song_id) user-song pair exists in the history
table
. A user may listen to a specific song multiple times in the same day.


WITH CTE AS (
SELECT user_id,song_id,song_plays 
from songs_history

UNION ALL

SELECT user_id,song_id,
  count(listen_time) as play_time
FROM songs_weekly
WHERE listen_time < '08/05/2022'
GROUP BY 1,2
)

SELECT user_id,song_id,SUM(song_plays) AS song_plays
FROM CTE 
GROUP BY 1,2
ORDER BY 3 DESC

/*Mean, Median, Mode [Microsoft SQL Interview Question]*/
Q. Problem: You're given a list of numbers representing the number of emails in the inbox of Microsoft Outlook users. Before the Product Management team can start developing features related to bulk-deleting email or achieving inbox zero, they simply want to find the mean, median, and mode for the emails. Display the output of mean, median, and mode (in this order), with the mean rounded to the nearest integer. It should be assumed that there are no ties to the mode.

SELECT round(Avg(email_count)) as mean,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY email_count) as median,
    Mode() WITHIN GROUP (ORDER BY email_count) as mode
FROM inbox_stats

/*Supercloud Customer [Microsoft SQL Interview Question]*/
Q. Write a query that effectively identifies the company ID of such Supercloud customers.
Customer 1 bought from Analytics, Containers, and Compute categories of Azure, and thus is a Supercloud customer. Customer 2 isn't a Supercloud customer, since they don't buy any container services from Azure.

/*
with cte as 
(SELECT c.customer_id,
COUNT( DISTINCT p.product_category) as unique_category
FROM customer_contracts c 
left join products p 
  on c.product_id = p.product_id
GROUP BY 1)
SELECT customer_id
from cte
where unique_category >=3
*/

/*This is a dynamic query which filter based on unique prod cat*/

with cte as 
(SELECT c.customer_id,
COUNT( DISTINCT p.product_category) as unique_category
FROM customer_contracts c 
left join products p 
  on c.product_id = p.product_id
GROUP BY 1)
SELECT customer_id
from cte
where unique_category = (
  select COUNT(DISTINCT product_category) from products
)
ORDER BY 1

/*Odd and Even Measurements [Google SQL Interview Question]*/
Q.Write a query to calculate the sum of odd-numbered and even-numbered measurements separately for a particular day and display the results in two different columns. Refer to the Example Output below for the desired format.
Sol1:
with cte as
(SELECT 
  cast(measurement_time as date) as measurement_day,measurement_time,
  measurement_value
FROM measurements
ORDER BY 2),
cte1 as (
select 
  measurement_day,measurement_value,
  row_number() over(PARTITION BY measurement_day order by measurement_time) as rn
from cte
)
SELECT measurement_day,
  sum(measurement_value) filter( where rn %2 !=0 ) as odd_sum,
  sum(measurement_value) filter( where rn %2 =0 ) as even_sum 
from cte1 
GROUP BY 1

Sol2:
WITH ranked_measurements AS (
  SELECT 
    CAST(measurement_time AS DATE) AS measurement_day, 
    measurement_value, 
    ROW_NUMBER() OVER (
      PARTITION BY CAST(measurement_time AS DATE) 
      ORDER BY measurement_time) AS measurement_num 
  FROM measurements
) 

SELECT 
  measurement_day, 
  SUM(measurement_value) FILTER (WHERE measurement_num % 2 != 0) AS odd_sum, 
  SUM(measurement_value) FILTER (WHERE measurement_num % 2 = 0) AS even_sum 
FROM ranked_measurements
GROUP BY measurement_day;

/*Booking Referral Source [Airbnb SQL Interview Question] */ --not sure on this
Q. Write the query to find which of the marketing channels is driving first rental bookings for the company. The ask is to find the top marketing channel from the list, and the percentage of first rental bookings that it drives.

with bookingstable as
(
select b.booking_id as booking_id, b.user_id,b.booking_date,channel,
row_number() over(partition by b.user_id order by b.booking_date) as b_count
from bookings as b
join booking_attribution as ba on ba.booking_id = b.booking_id
)
select channel, 
round(105.0*count(booking_id)/(select count(booking_id) from bookingstable where b_count = 1),0) as first_booking_pct
from bookingstable
where b_count = 1

/* Histogram of Users and Purchases [Walmart SQL Interview Question] */ 
Q.Assume you're given a table on Walmart user transactions. Based on their most recent transaction date, write a query that retrieve the users along with the number of products they bought.

Output the user's most recent transaction date, user ID, and the number of products, sorted in chronological order by the transaction date.

with cte as 
(select *, rank() over(PARTITION BY user_id ORDER BY transaction_date desc) as transaction_rank
from user_transactions)
select transaction_date, user_id, count(product_id) as purchase_count
from cte 
where transaction_rank = 1
GROUP BY 1,2
ORDER BY 1
group by channel

/* Compressed Mode [Alibaba SQL Interview Question]*/ link: https://datalemur.com/questions/alibaba-compressed-mode
Q. Write a query to retrieve the mode of the order occurrences. Additionally, if there are multiple item counts with the same mode, the results should be sorted in ascending order.

SELECT item_count as mode
from items_per_order 
WHERE order_occurrences = (select max(order_occurrences) from items_per_order)

/*Card Launch Success [JPMorgan Chase SQL Interview Question]*/
Q.Write a query that outputs the name of the credit card, and how many cards were issued in its launch month. The launch month is the earliest record in the monthly_cards_issued table for a given card. Order the results starting from the biggest issued amount.

with cte as (
select *, rank() over(PARTITION BY card_name order by issue_year, issue_month) as rnk
from monthly_cards_issued 
)
select card_name, issued_amount 
from cte 
where rnk = 1  
ORDER BY 2 desc

/*International Call Percentage [Verizon SQL Interview Question]*/
Q.What percentage of phone calls are international? Round the result to 1 decimal.  link:https://datalemur.com/questions/international-call-percentage

with cte as 
(SELECT c.*,i.country_id as call_country,r.country_id as reciever_country
from phone_calls c 
LEFT JOIN phone_info i on c.caller_id = i.caller_id
LEFT JOIN phone_info r on c.receiver_id = r.caller_id
)
SELECT ROUND((1.0*
sum(case 
      WHEN call_country != reciever_country then 1 else 0 end) /count(*)*100),1) as international_calls_pct
from cte

/*Who Made Quota? [Oracle SQL Interview Question]*/
Q.Write a query that outputs each employee id and whether they hit the quota or not ('yes' or 'no'). Order the results by employee id in ascending order.

with cte AS
(select employee_id, sum(deal_size) as total_deal_size
from deals
GROUP BY 1
)
SELECT cte.employee_id,
  case WHEN total_deal_size > s.quota then 'yes' else 'no' end as mode_quota
FROM cte 
LEFT JOIN sales_quotas s on cte.employee_id = s.employee_id
ORDER BY 1

/* Hackerrank => Symmetric Pairs  */ 
Q.Two pairs (X1, Y1) and (X2, Y2) are said to be symmetric pairs if X1 = Y2 and X2 = Y1.
Write a query to output all such symmetric pairs in ascending order by the value of X. List the rows such that X1 â‰¤ Y1.

/* union is used to apply x<=y */
select f1.* from Functions f1 
join Functions f2 on f1.x = f2.y and f2.x = f1.y -- self join to get symetic pairs X1 = Y2 and X2 = Y1
where f1.x != f1.y -- considering only distinct pairs from tb1, tb2
and f1.x < f1.y -- to display pairs where x is smaller than y X1 = Y1 ie 1st condition

union

select * from Functions 
where x = y -- filter only pairs where x = y ie 2nd condition
group by 1,2 -- to find unique pairs
having count(1) > 1
order by 1

/*Hackerrank => Basic Join => Challenges */

Q.Write a query to print the hacker_id, name, and the total number of challenges created by each student. Sort your results by the total number of challenges in descending order. If more than one student created the same number of challenges, then sort the result by hacker_id. If more than one student created the same number of challenges and the count is less than the maximum number of challenges created, then exclude those students from the result.

with cte as
(select 
    h.hacker_id, h.name, count(challenge_id) as total_challenge
from Hackers h
left join Challenges c on h.hacker_id = c.hacker_id
group by 1,2
order by 3 desc)
select hacker_id, name, total_challenge 
from cte
where total_challenge not in(
    select total_challenge from cte 
    where total_challenge != (select max(total_challenge) from cte)
    group by total_challenge
    having count(*) >1
)


/*Active User Retention [Facebook SQL Interview Question]*/ link:https://datalemur.com/questions/user-retention
Q.Assume you're given a table containing information on Facebook user actions. Write a query to obtain number of monthly active users (MAUs) in July 2022, including the month in numerical format "1, 2, 3".
Note: An active user is defined as a user who has performed actions such as 'sign-in', 'like', or 'comment' in both the current month and the previous month.

with cte as 
(
SELECT user_id, event_type, EXTRACT(month from event_date) as month,
  case WHEN event_type in ('sign-in', 'like', 'comment') then 1 else 0 end as event_flag
FROM user_actions 
order by 1), 

cte2 as 
(
SELECT 
  user_id,month ,event_flag, lag(event_flag) over(PARTITION BY user_id) as flag
from cte
group by 1,2,3
)

SELECT cte2.month, count(cte2.flag) as monthly_active_users
from cte2 
where cte2.month = 7
GROUP BY 1

/*Y-on-Y Growth Rate [Wayfair SQL Interview Question]*/ link:https://datalemur.com/questions/yoy-growth-rate
Q.Assume you're given a table containing information about Wayfair user transactions for different products. Write a query to calculate the year-on-year growth rate for the total spend of each product, grouping the results by product ID.

The output should include the year in ascending order, product ID, current year's spend, previous year's spend and year-on-year growth percentage, rounded to 2 decimal places.

with cte as
(SELECT extract(year from transaction_date) as year, product_id, spend,transaction_date,
  lag(spend) over(PARTITION BY product_id) as lag_spend
FROM user_transactions )
SELECT year, product_id,spend as curr_year_spend,
  lag_spend as prev_year_spend,
  round(((spend - lag_spend)/lag_spend)*100,2) as yoy_rate
from cte

