-- https://leetcode.com/studyplan/top-sql-50/
Q1661. Average Time of Process per Machine
There is a factory website that has several machines each running the same number of processes. Write a solution to find the average time each machine takes to complete a process.
The time to complete a process is the 'end' timestamp minus the 'start' timestamp. The average time is calculated by the total time to complete every process on the machine divided by the number of processes that were run.
The resulting table should have the machine_id along with the average time as processing_time, which should be rounded to 3 decimal places.
Return the result table in any order.
Note: There are 3 machines running 2 processes each.
      Machine 0's average time is ((1.520 - 0.712) + (4.120 - 3.140)) / 2 = 0.894

select machine_id, 
        round(avg(
          case WHEN a.activity_type = 'end' 
                THEN a.timestamp else -a.timestamp END)*2,3) as processing_time
from Activity a
group by 1

1251. Average Selling Price --https://leetcode.com/problems/average-selling-price/description/?envType=study-plan-v2&envId=top-sql-50
Write a solution to find the average selling price for each product. average_price should be rounded to 2 decimal places.

Return the result table in any or
SELECT p.product_id, IFNULL(ROUND(SUM(units * price) / SUM(units),2),0) as average_price
FROM Prices p
LEFT JOIN UnitsSold u
ON p.product_id = u.product_id
AND u.purchase_date BETWEEN start_date AND end_date
GROUP BY product_id

1633. Percentage of Users Attended a Contest --https://leetcode.com/problems/percentage-of-users-attended-a-contest/description/?envType=study-plan-v2&envId=top-sql-50
Write a solution to find the percentage of the users registered in each contest rounded to two decimals.
Return the result table ordered by percentage in descending order. In case of a tie, order it by contest_id in ascending order.

Select contest_id, round(count(distinct user_id) *100.00 / (Select count(distinct  user_id) from Users) , 2) as percentage 
from Register 
group by contest_id 
order by percentage desc, contest_id;

1174. Immediate Food Delivery II --https://leetcode.com/problems/immediate-food-delivery-ii/description/?envType=study-plan-v2&envId=top-sql-50
If the customer's preferred delivery date is the same as the order date, then the order is called immediate; otherwise, it is called scheduled.
The first order of a customer is the order with the earliest order date that the customer made. It is guaranteed that a customer has precisely one first order.
Write a solution to find the percentage of immediate orders in the first orders of all customers, rounded to 2 decimal places.

with cte as (
select *, 
    rank() over(partition by customer_id order by order_date) as rn,
    case when order_date = customer_pref_delivery_date then 'immediate' else 'scheduled' end  as status
from Delivery)
select 
   round(100 * sum(case when status = 'immediate' then 1 else 0 end)/ count(*),2) as immediate_percentage 
from cte 
where rn = 1
