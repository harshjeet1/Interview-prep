Medium-Google:Common Friends Script--link:https://platform.stratascratch.com/coding/10365-common-friends-script?code_type=1
Q.You are analyzing a social network dataset at Google. Your task is to find mutual friends between two users, Karl and Hans. There is only one user named Karl and one named Hans in the dataset.

The output should contain 'user_id' and 'user_name' columns.
WITH cte AS (
    SELECT u.user_id, u.user_name, f.friend_id
    FROM users u
    JOIN friends f ON u.user_id = f.user_id
    WHERE u.user_name IN ('Karl', 'Hans')
), tb1 as (
SELECT cte1.friend_id
FROM cte cte1
JOIN cte cte2 ON cte1.friend_id = cte2.friend_id
WHERE cte1.user_name = 'Karl'
  AND cte2.user_name = 'Hans')
/*
-- tb1 can also be written as 
common_friendid as (
select friend_id
from cte 
group by 1
having count(*) >1
)
*/
SELECT u.*
FROM users u
join tb1 on u.user_id = tb1.friend_id

Population Density--Deloitte 
Q. You are working on a data analysis project at Deloitte where you need to analyze a dataset containing information
about various cities. Your task is to calculate the population density of these cities, rounded to the nearest integer, and identify the cities with the minimum and maximum densities. The output should contain 'city', 'country', 'density'.

with cte as 
(select city, country,
    ceil(population/area) as density
from cities_population
where area != 0) -- this is used to handle div by 0 error ie anytihing div by 0 is infinity. or case when can be utilized. 

, cte1 as (
select *, 
rank() over(order by density desc) as max_densities,
rank() over(order by density) as min_densities
from cte)

select city, country, density 
from cte1 
where max_densities = 1 
or min_densities =1 
